spring.application.name=notification-service
server.port=8085

#Eureka configuration
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.instance.prefer-ip-address=true

#Kafka configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# SMTP config (use your own Mailtrap credentials)
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=587
spring.mail.username=96e23f395b5d55
spring.mail.password=b83a8b6e990e18
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Required to export traces to Zipkin
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=${ZIPKIN_BASE_URL:http://localhost:9411/api/v2/spans}

# Optional: Add traceId and spanId in logs
logging.pattern.level=%5p [traceId=%X{traceId},spanId=%X{spanId}]

# logging configuration
logging.level.root=info
logging.level.com.gs=debug
logging.file.name=logs/notification-service.log

#circuit breaker configuration
resilience4j.circuitbreaker.instances.userServiceClient.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.userServiceClient.slidingWindowSize=10
resilience4j.circuitbreaker.instances.userServiceClient.maximun-number-of-calls=10
resilience4j.circuitbreaker.instances.userServiceClient.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userServiceClient.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.userServiceClient.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.userServiceClient.automatic-transition-from-open-to-half-open-enabled=true

resilience4j.timeline.instances.userServiceClient.timeoutDuration=2s